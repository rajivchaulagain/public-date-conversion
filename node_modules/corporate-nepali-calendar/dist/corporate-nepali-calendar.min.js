!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).CorporateNepaliCalendar={})}(this,(function(e){"use strict";const r={1992:[31,32,31,32,31,30,30,30,29,30,29,31],1993:[31,31,31,32,31,31,30,29,30,29,30,30],1994:[31,31,32,31,31,31,30,29,30,29,30,30],1995:[31,32,31,32,31,30,30,30,29,29,30,30],1996:[31,32,31,32,31,30,30,30,29,30,29,31],1997:[31,31,32,31,31,31,30,29,30,29,30,30],1998:[31,31,32,31,31,31,30,29,30,29,30,30],1999:[31,32,31,32,31,30,30,30,29,29,30,31],2e3:[30,32,31,32,31,30,30,30,29,30,29,31],2001:[31,31,32,31,31,31,30,29,30,29,30,30],2002:[31,31,32,32,31,30,30,29,30,29,30,30],2003:[31,32,31,32,31,30,30,30,29,29,30,31],2004:[30,32,31,32,31,30,30,30,29,30,29,31],2005:[31,31,32,31,31,31,30,29,30,29,30,30],2006:[31,31,32,32,31,30,30,29,30,29,30,30],2007:[31,32,31,32,31,30,30,30,29,29,30,31],2008:[31,31,31,32,31,31,29,30,30,29,29,31],2009:[31,31,32,31,31,31,30,29,30,29,30,30],2010:[31,31,32,32,31,30,30,29,30,29,30,30],2011:[31,32,31,32,31,30,30,30,29,29,30,31],2012:[31,31,31,32,31,31,29,30,30,29,30,30],2013:[31,31,32,31,31,31,30,29,30,29,30,30],2014:[31,31,32,32,31,30,30,29,30,29,30,30],2015:[31,32,31,32,31,30,30,30,29,29,30,31],2016:[31,31,31,32,31,31,29,30,30,29,30,30],2017:[31,31,32,31,31,31,30,29,30,29,30,30],2018:[31,32,31,32,31,30,30,29,30,29,30,30],2019:[31,32,31,32,31,30,30,30,29,30,29,31],2020:[31,31,31,32,31,31,30,29,30,29,30,30],2021:[31,31,32,31,31,31,30,29,30,29,30,30],2022:[31,32,31,32,31,30,30,30,29,29,30,30],2023:[31,32,31,32,31,30,30,30,29,30,29,31],2024:[31,31,31,32,31,31,30,29,30,29,30,30],2025:[31,31,32,31,31,31,30,29,30,29,30,30],2026:[31,32,31,32,31,30,30,30,29,29,30,31],2027:[30,32,31,32,31,30,30,30,29,30,29,31],2028:[31,31,32,31,31,31,30,29,30,29,30,30],2029:[31,31,32,31,32,30,30,29,30,29,30,30],2030:[31,32,31,32,31,30,30,30,29,29,30,31],2031:[30,32,31,32,31,30,30,30,29,30,29,31],2032:[31,31,32,31,31,31,30,29,30,29,30,30],2033:[31,31,32,32,31,30,30,29,30,29,30,30],2034:[31,32,31,32,31,30,30,30,29,29,30,31],2035:[30,32,31,32,31,31,29,30,30,29,29,31],2036:[31,31,32,31,31,31,30,29,30,29,30,30],2037:[31,31,32,32,31,30,30,29,30,29,30,30],2038:[31,32,31,32,31,30,30,30,29,29,30,31],2039:[31,31,31,32,31,31,29,30,30,29,30,30],2040:[31,31,32,31,31,31,30,29,30,29,30,30],2041:[31,31,32,32,31,30,30,29,30,29,30,30],2042:[31,32,31,32,31,30,30,30,29,29,30,31],2043:[31,31,31,32,31,31,29,30,30,29,30,30],2044:[31,31,32,31,31,31,30,29,30,29,30,30],2045:[31,32,31,32,31,30,30,29,30,29,30,30],2046:[31,32,31,32,31,30,30,30,29,29,30,31],2047:[31,31,31,32,31,31,30,29,30,29,30,30],2048:[31,31,32,31,31,31,30,29,30,29,30,30],2049:[31,32,31,32,31,30,30,30,29,29,30,30],2050:[31,32,31,32,31,30,30,30,29,30,29,31],2051:[31,31,31,32,31,31,30,29,30,29,30,30],2052:[31,31,32,31,31,31,30,29,30,29,30,30],2053:[31,32,31,32,31,30,30,30,29,29,30,30],2054:[31,32,31,32,31,30,30,30,29,30,29,31],2055:[31,31,32,31,31,31,30,29,30,29,30,30],2056:[31,31,32,31,32,30,30,29,30,29,30,30],2057:[31,32,31,32,31,30,30,30,29,29,30,31],2058:[30,32,31,32,31,30,30,30,29,30,29,31],2059:[31,31,32,31,31,31,30,29,30,29,30,30],2060:[31,31,32,32,31,30,30,29,30,29,30,30],2061:[31,32,31,32,31,30,30,30,29,30,29,31],2062:[30,32,31,32,31,31,29,30,29,30,29,31],2063:[31,31,32,31,31,31,30,29,30,29,30,30],2064:[31,31,32,32,31,30,30,29,30,29,30,30],2065:[31,32,31,32,31,30,30,30,29,29,30,31],2066:[31,31,31,32,31,31,29,30,30,29,29,31],2067:[31,31,32,31,31,31,30,29,30,29,30,30],2068:[31,31,32,32,31,30,30,29,30,29,30,30],2069:[31,32,31,32,31,30,30,30,29,29,30,31],2070:[31,31,31,32,31,31,29,30,30,29,30,30],2071:[31,31,32,31,31,31,30,29,30,29,30,30],2072:[31,32,31,32,31,30,30,29,30,29,30,30],2073:[31,32,31,32,31,30,30,30,29,29,30,31],2074:[31,31,31,32,31,31,30,29,30,29,30,30],2075:[31,31,32,31,31,31,30,29,30,29,30,30],2076:[31,32,31,32,31,30,30,30,29,29,30,30],2077:[31,32,31,32,31,30,30,30,29,30,29,31],2078:[31,31,31,32,31,31,30,29,30,29,30,30],2079:[31,31,32,31,31,31,30,29,30,29,30,30],2080:[31,32,31,32,31,30,30,30,29,29,30,30],2081:[31,32,31,32,31,30,30,30,29,30,29,31],2082:[31,31,32,31,31,30,30,30,29,30,30,30],2083:[31,31,32,31,31,30,30,30,29,30,30,30],2084:[31,31,32,31,31,30,30,30,29,30,30,30],2085:[31,32,31,32,30,31,30,30,29,30,30,30],2086:[30,32,31,32,31,30,30,30,29,30,30,30],2087:[31,31,32,31,31,31,30,30,30,30,30,30],2088:[30,31,32,32,30,31,30,30,29,30,30,30],2089:[30,32,31,32,31,30,30,30,29,30,30,30],2090:[30,32,31,32,31,30,30,30,29,30,30,30],2091:[31,31,32,31,31,31,30,30,29,30,30,30],2092:[30,31,32,32,31,30,30,30,29,30,30,30],2093:[30,32,31,32,31,30,30,30,29,30,30,30],2094:[31,31,32,31,31,30,30,30,29,30,30,30],2095:[31,31,32,31,31,31,30,29,30,30,30,30],2096:[30,31,32,32,31,30,30,29,30,29,30,30],2097:[31,32,31,32,31,30,30,30,29,30,30,30],2098:[31,31,32,31,31,31,29,30,29,30,29,31],2099:[31,31,32,31,31,31,30,29,29,30,30,30],2100:[31,32,31,32,30,31,30,29,30,29,30,30]},a=r,t=1935,n=e=>e%4==0&&e%100!=0||e%400==0,o=(e,r)=>{const a=[31,n(e)?29:28,31,30,31,30,31,31,30,31,30,31][r-1];if(void 0===a)throw new Error("Unexpected error: Month index out of bounds.");return a},i=(e,r,i)=>{const d=((e,r,a)=>{let i=-90;for(let r=t;r<e;r++)i+=n(r)?366:365;for(let a=1;a<r;a++)i+=o(e,a);return i+=a-13,i})(e,r,i);let s=d,l=1992,h=1,f=1;if(t>=e&&(4>r||4===r&&13>i))throw new Error("AD year goes beyond the available range.");if(void 0===a[l])throw new Error("BS year exceeds the available range (1992-2100).");for(;s>=(a[l]?.[h-1]??0);)if(s-=a[l]?.[h-1]??0,h++,h>12&&(h=1,l++,void 0===a[l]))throw new Error("BS year exceeds the available range (1992-2100).");if(f+=s,f>(a[l]?.[h-1]??0)&&(f-=a[l]?.[h-1]??0,h++,h>12&&(h=1,l++,void 0===a[l])))throw new Error("BS year exceeds the available range (1992-2100).");return{bsYear:l,bsMonth:h,bsDay:f}},d=(e,r,n)=>{if(e<1992||e>2100)throw new Error("BS year exceeds the available range (1992-2100).");const i=((e,r,t)=>{if(void 0===a[e])throw new Error("Please enter BS year from 1992 to 2100.");let n=0;for(let r=1992;r<e;r++){const e=a[r];if(!e){console.warn(`Terminating loop due to missing data for BS year ${r}.`);break}n+=e.reduce(((e,r)=>e+r),0)}for(let t=0;t<r-1;t++)n+=a[e][t]||0;return n+=t-1,n})(e,r,n);let d=i,s=t,l=4,h=13;for(;d>0;){const e=o(s,l);d<e?(h+=d,h>e&&(l+=1,h-=e),l>12&&(l=1,s++),d=0):(d-=e,l++,l>12&&(l=1,s++))}return{adYear:s,adMonth:l,adDay:h}},s=({year:e,month:r,day:a,format:t="YYYY-MM-DD"})=>{const n=r.toString().padStart(2,"0"),o=a.toString().padStart(2,"0");return t.replace("YYYY",e.toString()).replace("MM",n).replace("DD",o)},l=e=>{if(e<1992||e>2100)throw new Error("Invalid year: Please provide a year between 1992 and 2100.")},h=e=>{if(e<1||e>12)throw new Error("Invalid month: Please provide a month between 1 and 12.")},f=(e,a)=>{let t;if("calendar"===a)t=r[e]||[];else{if("financial"!==a)throw new Error(`Invalid accountingYearType: ${a}`);t=[...r[e]?.slice(3)||[],...r[e+1]?.slice(0,3)||[]]}return t},y=({dateString:e,periodType:r="quarter",yearType:a="calendar"})=>{const[t,n]=e.split("-").map(Number);if("financial"===a){if("quarter"===r){let e=n<4?t-1:t;const r=n<4?n+9:n-3,a=Math.ceil((r+3)/3);return a>4&&e++,{year:e,quarter:(a-1)%4+1}}if("half-year"===r)return{year:t,halfYear:3===n?1:2}}if("quarter"===r){const e=Math.ceil((n+3)/3);return{year:e>4?t+1:t,quarter:(e-1)%4+1}}if("half-year"===r){const e=Math.ceil((n+6)/6);return{year:e>2?t+1:t,halfYear:(e-1)%2+1}}throw new Error('Invalid periodType. Use "quarter" or "half-year".')},c="calendar",u=(e,r,a)=>{l(e),h(r);const t=f(e,a||c)[r-1]||30;return s({year:e,month:r,day:t})},p=(e,r,a)=>{l(e);const t=a||c,n=f(e,t);if(r<1||r>4)throw new Error("Invalid quarter: Please provide a quarter between 1 and 4.");const o=n[3*r-1]||30;let i=e,d=3*r;"financial"===t&&(i=4===r?e+1:e,d=3*(r%4+1));return s({year:i,month:d,day:o})},w=(e,r,a)=>{l(e);const t=a||c,n=f(e,t);if(1!==r&&2!==r)throw new Error("Invalid half: Please provide a half of either 1 or 2.");const o=n[6*r-1]||30;let i=e,d=6*r;"financial"===t&&(d+=3,i=d>12?e+1:e,d%=12);return s({year:i,month:d,day:o})},v=e=>{const r=(e instanceof Date?e.toISOString():e).split("T")[0];if(!r)throw new Error("Invalid date: Please provide a valid date.");const[a,t,n]=r.split("-").map(Number);if(!a||!t||!n)throw new Error("Invalid date: Please provide a valid date.");const{bsYear:o,bsMonth:d,bsDay:l}=i(a,t,n);return s({year:o,month:d,day:l})},m=e=>{const r=(e instanceof Date?e.toISOString():e)?.split("T")[0];if(!r)throw new Error("Invalid date: Please provide a valid date.");const[a,t,n]=r.split("-").map(Number);if(!a||!t||!n)throw new Error("Invalid date: Please provide a valid date.");const{adYear:o,adMonth:i,adDay:l}=d(a,t,n);return s({year:o,month:i,day:l})},D=({startDate:e,endDate:r,periodType:a,yearType:t="calendar"})=>{const n="quarter"===a?p:w,o=[e];let i=(({dateString:e,periodType:r="quarter",yearType:a="calendar"})=>{const[t,n]=e.split("-").map(Number);if("financial"===a){const e=n<4?t-1:t,a=(n+9)%12+1;if("quarter"===r)return{year:e,quarter:Math.ceil(a/3)};if("half-year"===r)return{year:e,halfYear:Math.ceil(a/6)}}if("quarter"===r)return{year:t,quarter:Math.ceil(n/3)};if("half-year"===r)return{year:t,halfYear:Math.ceil(n/6)};throw new Error('Invalid periodType. Use "quarter" or "half-year".')})({dateString:e,periodType:a,yearType:t});for(;;){const e=n(i.year,i.quarter??i.halfYear,t);if(e>r){o.includes(r)||o.push(r);break}o.push(e);const d=y({dateString:e,periodType:a,yearType:t});if(n(d.year,d.quarter??d.halfYear,t)>r){o.push(r);break}i=d}return o};e.convertToAd=m,e.convertToBs=v,e.getAdMonthRangeFromBsMonth=(e,r)=>{if(r<1||r>12)throw new Error("Invalid month: Please provide a month between 1 and 12.");const a=u(e,r),t=m(a);return{monthStartDate:m(s({year:e,month:r,day:1})),monthEndDate:t}},e.getBsMonthEndDate=u,e.getBsQuarterEndDate=p,e.getBsYearEndDate=(e,r)=>{l(e);const a=f(e,r||c)[11]||30;return s({year:e,month:12,day:a})},e.getDaysAdMonth=(e,r)=>{if(r<1||r>12)throw new Error("Invalid month: Please provide a month between 1 and 12.");const a=o(e,r);if(void 0===a)throw new Error("Unexpected error: Month index out of bounds.");return a},e.getDaysBsHalfYear=(e,r,a)=>{l(e);const t=a||c;if(1!==r&&2!==r)throw new Error("Invalid half: Please provide a half of either 1 or 2.");const n=6*(r-1);return f(e,t).slice(n,n+6).reduce(((e,r)=>e+r),0)},e.getDaysBsMonth=(e,r,a)=>{l(e),h(r);return f(e,a||c)[r-1]||30},e.getDaysBsQuarter=(e,r,a)=>{l(e);const t=a||c;if(r<1||r>4)throw new Error("Invalid quarter: Please provide a quarter between 1 and 4.");const n=3*(r-1);return f(e,t).slice(n,n+3).reduce(((e,r)=>e+r),0)},e.getDaysBsYear=(e,r)=>{l(e);return f(e,r||c).reduce(((e,r)=>e+r),0)},e.getDaysDifferenceBsDates=({startDate:e,endDate:r,includeEndDate:a=!1})=>{let t=((e,r,a="days")=>{const t=Math.abs(e.getTime()-r.getTime()),n=Math.floor(t/864e5);switch(a){case"days":return{days:n};case"weeks":return{weeks:Math.floor(n/7),days:n%7};case"months":return{months:Math.floor(n/30.44),days:Math.floor(n%30.44)};default:throw new Error("Invalid unit")}})(new Date(m(e)),new Date(m(r))).days;return a&&(t+=1),t},e.getPeriodEndDatesAd=({startDate:e,endDate:r,periodType:a,yearType:t="calendar"})=>D({startDate:e,endDate:r,periodType:a,yearType:t}).map((e=>m(e))),e.getPeriodEndDatesBs=D,e.getTodaysBsDate=()=>{const e=(()=>{const e=process?.env?.TZ,r=Intl?.DateTimeFormat().resolvedOptions().timeZone;return e||r||"Asia/Kathmandu"})(),r=new Intl.DateTimeFormat("en-GB",{timeZone:e,year:"numeric",month:"2-digit",day:"2-digit"}).formatToParts(new Date),a=r.find((e=>"year"===e.type))?.value,t=r.find((e=>"month"===e.type))?.value,n=r.find((e=>"day"===e.type))?.value;return v(`${a}-${t}-${n}`)}}));
//# sourceMappingURL=corporate-nepali-calendar.min.js.map
