import type { AccountingYearType, AdDateResult, BSDate, DateDifference, DateResult, FormatDateParams, PaymentFrequency } from "./types.js";
export declare const isValidBSDate: (bsDate: BSDate) => boolean;
export declare const parseBSDate: (bsDate: BSDate) => {
    year: number;
    month: number;
    day: number;
};
export declare const isLeapYear: (year: number) => boolean;
export declare const getTimeZone: () => string;
export declare const daysInAdMonth: (year: number, month: number) => number;
export declare const calculateTotalDaysFromBs: (bsYear: number, bsMonth: number, bsDay: number) => number;
export declare const calculateTotalDaysFromAd: (adYear: number, adMonth: number, adDay: number) => number;
export declare const adToBsDateConversion: (adYear: number, adMonth: number, adDay: number) => DateResult;
export declare const bsToAdDateConversion: (bsYear: number, bsMonth: number, bsDay: number) => AdDateResult;
export declare const formatDate: ({ year, month, day, format, }: FormatDateParams) => string;
export declare const dateDifference: (date1: Date, date2: Date, unit?: "days" | "weeks" | "months") => DateDifference;
export declare const validateYear: (year: number) => void;
export declare const validateMonth: (month: number) => void;
export declare const getDaysArray: (year: number, accountingYearType: AccountingYearType) => number[];
export declare const getDivisionFactor: (paymentFrequency: PaymentFrequency) => 1 | 12 | 3 | 6;
export declare const getPeriod: ({ dateString, periodType, yearType, }: {
    dateString: string;
    periodType: PaymentFrequency;
    yearType: AccountingYearType;
}) => {
    year: number;
    quarter: number;
    halfYear?: undefined;
} | {
    year: number;
    halfYear: number;
    quarter?: undefined;
};
export declare const nextPeriod: ({ dateString, periodType, yearType, }: {
    dateString: string;
    periodType: PaymentFrequency;
    yearType: AccountingYearType;
}) => {
    year: number;
    quarter: number;
    halfYear?: undefined;
} | {
    year: number;
    halfYear: number;
    quarter?: undefined;
};
//# sourceMappingURL=_helpers.d.ts.map