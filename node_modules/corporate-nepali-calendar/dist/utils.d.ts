import type { AccountingYearType, AdMonthRange, BSDate, GlobalConfig, PaymentFrequency } from "./types.js";
export declare const globalConfig: GlobalConfig;
export declare const setGlobalConfig: (config: Partial<GlobalConfig>) => void;
export declare const getDaysAdMonth: (year: number, month: number) => number;
export declare const getDaysBsMonth: (year: number, month: number, accountingYearType?: AccountingYearType) => number;
export declare const getDaysBsQuarter: (year: number, quarter: number, accountingYearType?: AccountingYearType) => number;
export declare const getDaysBsHalfYear: (year: number, half: number, accountingYearType?: AccountingYearType) => number;
export declare const getDaysBsYear: (year: number, accountingYearType?: AccountingYearType) => number;
export declare const getBsMonthEndDate: (year: number, month: number, accountingYearType?: AccountingYearType) => string;
export declare const getBsQuarterEndDate: (year: number, quarter: number, accountingYearType?: AccountingYearType) => string;
export declare const getBsHalfYearEndDate: (year: number, half: number, accountingYearType?: AccountingYearType) => string;
export declare const getBsYearEndDate: (year: number, accountingYearType?: AccountingYearType) => string;
export declare const convertToBs: (date: string | Date) => BSDate;
export declare const convertToAd: (date: string | Date) => string;
export declare const getDaysDifferenceBsDates: ({ startDate, endDate, includeEndDate, }: {
    startDate: string;
    endDate: string;
    includeEndDate?: boolean;
}) => number;
export declare const getAdMonthRangeFromBsMonth: (year: number, month: number) => AdMonthRange;
export declare const getTodaysBsDate: () => BSDate;
export declare const getPeriodEndDatesBs: ({ startDate, endDate, periodType, yearType, }: {
    startDate: string;
    endDate: string;
    periodType: PaymentFrequency;
    yearType?: AccountingYearType;
}) => string[];
export declare const getPeriodEndDatesAd: ({ startDate, endDate, periodType, yearType, }: {
    startDate: string;
    endDate: string;
    periodType: PaymentFrequency;
    yearType?: AccountingYearType;
}) => string[];
//# sourceMappingURL=utils.d.ts.map